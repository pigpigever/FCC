{"title":"剑指 Offer 10- I. 斐波那契数列","date":"2020-08-16T02:58:26.000Z","date_formatted":{"ll":"Aug 16, 2020","L":"08/16/2020","MM-DD":"08-16"},"thumbnail":"/images/thumbnail/8.jpg","link":"2020/08/16/剑指 Offer 10- I. 斐波那契数列","comments":true,"tags":["LeetCode","剑指offer","动态规划","算法","递归"],"categories":["剑指offer"],"updated":"2020-08-16T03:11:53.397Z","content":"<h2 id=\"题目\">题目<a title=\"#题目\" href=\"#题目\"></a></h2>\n<p>写一个函数，输入 n ，求斐波那契（Fibonacci）数列的第 n 项。斐波那契数列的定义如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">F(0) &#x3D; 0,   F(1) &#x3D; 1</span><br><span class=\"line\">F(N) &#x3D; F(N - 1) + F(N - 2), 其中 N &gt; 1.</span><br></pre></td></tr></table></figure>\n<p>斐波那契数列由 0 和 1 开始，之后的斐波那契数就是由之前的两数相加而得出。</p>\n<p>答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。</p>\n<p>示例 1：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：n &#x3D; 2</span><br><span class=\"line\">输出：1</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：n &#x3D; 5</span><br><span class=\"line\">输出：5</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 &lt;&#x3D; n &lt;&#x3D; 100</span><br></pre></td></tr></table></figure>\n<h2 id=\"解题思路\">解题思路<a title=\"#解题思路\" href=\"#解题思路\"></a></h2>\n<h3 id=\"思路一\">思路一<a title=\"#思路一\" href=\"#思路一\"></a></h3>\n<p>斐波那契数列可以用递归来解，但是这道题数据量很大，所以我们还需要加上记忆化。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">n</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fib = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> helper = <span class=\"function\">(<span class=\"params\">n</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> n</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (map.has(n)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> map.get(n)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> res = (helper(n - <span class=\"number\">1</span>) + helper(n - <span class=\"number\">2</span>)) % mod</span><br><span class=\"line\">        map.set(n, res)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> map = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>()</span><br><span class=\"line\">    <span class=\"keyword\">const</span> mod = <span class=\"number\">1e9</span> + <span class=\"number\">7</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> helper(n)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"思路二\">思路二<a title=\"#思路二\" href=\"#思路二\"></a></h3>\n<p>对于思路一中提到的 <code>helper(n) = helper(n - 1) + helper(n - 2)</code>，我们可以利用单独的两个变量处理。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">n</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fib = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> mod = <span class=\"number\">1e9</span> + <span class=\"number\">7</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> a = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> b = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> prev = a</span><br><span class=\"line\">        a = (a + b) % mod</span><br><span class=\"line\">        b = prev</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","next":{"title":"剑指 Offer 09. 用两个栈实现队列","link":"2020/08/16/剑指 Offer 09. 用两个栈实现队列"},"plink":"https://pigpigever.github.io/2020/08/16/剑指 Offer 10- I. 斐波那契数列/","toc":[{"id":"题目","title":"题目","index":"1"},{"id":"解题思路","title":"解题思路","index":"2","children":[{"id":"思路一","title":"思路一","index":"2.1"},{"id":"思路二","title":"思路二","index":"2.2"}]}],"copyright":{"author":"Tonychen","link":"<a href=\"https://pigpigever.github.io/2020/08/16/剑指 Offer 10- I. 斐波那契数列/\" title=\"剑指 Offer 10- I. 斐波那契数列\">https://pigpigever.github.io/2020/08/16/剑指 Offer 10- I. 斐波那契数列/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}