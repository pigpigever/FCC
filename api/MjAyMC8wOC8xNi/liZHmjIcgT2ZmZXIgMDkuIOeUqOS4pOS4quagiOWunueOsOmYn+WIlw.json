{"title":"剑指 Offer 09. 用两个栈实现队列","date":"2020-08-16T01:55:22.000Z","date_formatted":{"ll":"Aug 16, 2020","L":"08/16/2020","MM-DD":"08-16"},"thumbnail":"/images/thumbnail/8.jpg","link":"2020/08/16/剑指 Offer 09. 用两个栈实现队列","comments":true,"tags":["LeetCode","剑指offer","栈","算法","设计","队列"],"categories":["剑指offer"],"updated":"2020-08-16T02:51:02.220Z","content":"<h2 id=\"题目\">题目<a title=\"#题目\" href=\"#题目\"></a></h2>\n<p>用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead 操作返回 -1 )</p>\n<p>示例 1：</p>\n<p>输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&quot;CQueue&quot;,&quot;appendTail&quot;,&quot;deleteHead&quot;,&quot;deleteHead&quot;]</span><br><span class=\"line\">[[],[3],[],[]]</span><br><span class=\"line\">输出：[null,null,3,-1]</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<p>输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&quot;CQueue&quot;,&quot;deleteHead&quot;,&quot;appendTail&quot;,&quot;appendTail&quot;,&quot;deleteHead&quot;,&quot;deleteHead&quot;]</span><br><span class=\"line\">[[],[],[5],[2],[],[]]</span><br><span class=\"line\">输出：[null,-1,null,null,5,2]</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 &lt;&#x3D; values &lt;&#x3D; 10000</span><br><span class=\"line\">最多会对 appendTail、deleteHead 进行 10000 次调用</span><br></pre></td></tr></table></figure>\n<h2 id=\"解题思路\">解题思路<a title=\"#解题思路\" href=\"#解题思路\"></a></h2>\n<h3 id=\"思路一\">思路一<a title=\"#思路一\" href=\"#思路一\"></a></h3>\n<ul>\n<li>声明两个变量分别为 <code>stack1</code> 和 <code>stack2</code>。</li>\n<li>当执行 <code>appendTail</code> 时只需要将值加入 <code>stack1</code> 中。</li>\n<li>当执行 <code>deleteHead</code> 时，有以下几种情况：\n<ol>\n<li>当 <code>stack1</code> 和 <code>stack2</code> 都为空时，返回 $-1$。</li>\n<li>当 <code>stack2</code> 不为空时，直接返回 <code>stack2.pop()</code></li>\n<li>当 <code>stack2</code> 为空时，将 <code>stack1</code> 中的值依次存入 <code>stack2</code>，最后返回 <code>stack2.pop()</code> 即可。</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> CQueue = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.stack1 = []</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.stack2 = []</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">value</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;void&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">CQueue.prototype.appendTail = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.stack1.push(value)</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">CQueue.prototype.deleteHead = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; stack1, stack2 &#125; = <span class=\"keyword\">this</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!stack2.length) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!stack1.length) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (stack1.length) &#123;</span><br><span class=\"line\">            stack2.push(stack1.pop())</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> stack2.pop()</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Your CQueue object will be instantiated and called as such:</span></span><br><span class=\"line\"><span class=\"comment\"> * var obj = new CQueue()</span></span><br><span class=\"line\"><span class=\"comment\"> * obj.appendTail(value)</span></span><br><span class=\"line\"><span class=\"comment\"> * var param_2 = obj.deleteHead()</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n","prev":{"title":"剑指 Offer 10- I. 斐波那契数列","link":"2020/08/16/剑指 Offer 10- I. 斐波那契数列"},"next":{"title":"剑指 Offer 07.重建二叉树","link":"2020/08/15/剑指Offer07-重建二叉树"},"plink":"https://pigpigever.github.io/2020/08/16/剑指 Offer 09. 用两个栈实现队列/","toc":[{"id":"题目","title":"题目","index":"1"},{"id":"解题思路","title":"解题思路","index":"2","children":[{"id":"思路一","title":"思路一","index":"2.1"}]}],"copyright":{"author":"Tonychen","link":"<a href=\"https://pigpigever.github.io/2020/08/16/剑指 Offer 09. 用两个栈实现队列/\" title=\"剑指 Offer 09. 用两个栈实现队列\">https://pigpigever.github.io/2020/08/16/剑指 Offer 09. 用两个栈实现队列/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}