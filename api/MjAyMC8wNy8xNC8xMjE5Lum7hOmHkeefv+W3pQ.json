{"title":"1219. 黄金矿工","date":"2020-07-13T16:00:00.000Z","date_formatted":{"ll":"Jul 14, 2020","L":"07/14/2020","MM-DD":"07-14"},"thumbnail":"/images/thumbnail/7.jpg","link":"2020/07/14/1219.黄金矿工","comments":true,"tags":["LeetCode","算法","递归"],"categories":["LeetCode"],"updated":"2020-08-10T13:38:11.815Z","content":"<p><a href=\"https://leetcode-cn.com/problems/path-with-maximum-gold/\" target=\"_blank\">题目来源</a></p>\n<h2 id=\"题目\">题目<a title=\"#题目\" href=\"#题目\"></a></h2>\n<p>你要开发一座金矿，地质勘测学家已经探明了这座金矿中的资源分布，并用大小为 m * n 的网格 grid 进行了标注。每个单元格中的整数就表示这一单元格中的黄金数量；如果该单元格是空的，那么就是 0。</p>\n<p>为了使收益最大化，矿工需要按以下规则来开采黄金：</p>\n<ul>\n<li>每当矿工进入一个单元，就会收集该单元格中的所有黄金。</li>\n<li>矿工每次可以从当前位置向上下左右四个方向走。</li>\n<li>每个单元格只能被开采（进入）一次。</li>\n<li>不得开采（进入）黄金数目为 0 的单元格。</li>\n<li>矿工可以从网格中 任意一个 有黄金的单元格出发或者是停止。</li>\n</ul>\n<p>示例 1：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：grid &#x3D; [[0,6,0],[5,8,7],[0,9,0]]</span><br><span class=\"line\">输出：24</span><br><span class=\"line\">解释：</span><br><span class=\"line\">[[0,6,0],</span><br><span class=\"line\"> [5,8,7],</span><br><span class=\"line\"> [0,9,0]]</span><br><span class=\"line\">一种收集最多黄金的路线是：9 -&gt; 8 -&gt; 7。</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：grid &#x3D; [[1,0,7],[2,0,6],[3,4,5],[0,3,0],[9,0,20]]</span><br><span class=\"line\">输出：28</span><br><span class=\"line\">解释：</span><br><span class=\"line\">[[1,0,7],</span><br><span class=\"line\"> [2,0,6],</span><br><span class=\"line\"> [3,4,5],</span><br><span class=\"line\"> [0,3,0],</span><br><span class=\"line\"> [9,0,20]]</span><br><span class=\"line\">一种收集最多黄金的路线是：1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 7。</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<ul>\n<li>1 &lt;= grid.length, grid[i].length &lt;= 15</li>\n<li>0 &lt;= grid[i][j] &lt;= 100</li>\n<li>最多 <strong>25</strong> 个单元格中有黄金。</li>\n</ul>\n<h2 id=\"解题思路\">解题思路<a title=\"#解题思路\" href=\"#解题思路\"></a></h2>\n<ol>\n<li>遍历矩阵，从非 $0$ 数字开始按上、下、左、右四个方向搜索。</li>\n<li>标记已经访问过的坐标。</li>\n<li>遇到遍历过或者为 $0$ 的数字就停止搜索。</li>\n<li>搜索过程中将该位置的值累加上。</li>\n<li>拿到最后得到的值，跟上一个最大值进行比较，二者取其大。</li>\n</ol>\n<h2 id=\"代码\">代码<a title=\"#代码\" href=\"#代码\"></a></h2>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number[][]&#125;</span> <span class=\"variable\">grid</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> getMaximumGold = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">grid</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> helper = <span class=\"function\">(<span class=\"params\">i, j</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; <span class=\"number\">0</span> || i &gt;= row || j &lt; <span class=\"number\">0</span> || j &gt;= col || grid[i][j] === <span class=\"number\">0</span> || visited[i][j]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> res = <span class=\"number\">0</span></span><br><span class=\"line\">        visited[i][j] = <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> k = <span class=\"number\">0</span>; k &lt; dir.length; k++) &#123;</span><br><span class=\"line\">            res = <span class=\"built_in\">Math</span>.max(res, helper(i + dir[k][<span class=\"number\">0</span>], j + dir[k][<span class=\"number\">1</span>]) + grid[i][j])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        visited[i][j] = <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> res</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!grid.length) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> row = grid.length</span><br><span class=\"line\">    <span class=\"keyword\">const</span> col = grid[<span class=\"number\">0</span>].length</span><br><span class=\"line\">    <span class=\"keyword\">const</span> dir = [[<span class=\"number\">1</span>, <span class=\"number\">0</span>], [<span class=\"number\">-1</span>, <span class=\"number\">0</span>], [<span class=\"number\">0</span>, <span class=\"number\">-1</span>], [<span class=\"number\">0</span>, <span class=\"number\">1</span>]]</span><br><span class=\"line\">    <span class=\"keyword\">let</span> visited = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(row).fill(<span class=\"literal\">false</span>).map(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(col).fill(<span class=\"literal\">false</span>))</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; row; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; col; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (grid[i][j] !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                res = <span class=\"built_in\">Math</span>.max(res, helper(i, j))</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","prev":{"title":"291.单词规律II","link":"2020/07/16/291.单词规律II"},"next":{"title":"209. 长度最小的子数组","link":"2020/07/14/209.长度最小的子数组"},"plink":"https://pigpigever.github.io/2020/07/14/1219.黄金矿工/","toc":[{"id":"题目","title":"题目","index":"1"},{"id":"解题思路","title":"解题思路","index":"2"},{"id":"代码","title":"代码","index":"3"}]}