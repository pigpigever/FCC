{"title":"209. 长度最小的子数组","date":"2020-07-13T16:00:00.000Z","date_formatted":{"ll":"Jul 14, 2020","L":"07/14/2020","MM-DD":"07-14"},"thumbnail":"/images/thumbnail/7.jpg","link":"2020/07/14/209.长度最小的子数组","comments":true,"tags":["LeetCode","滑动窗口","算法"],"categories":["LeetCode"],"updated":"2020-08-10T15:18:15.544Z","content":"<p><a href=\"https://leetcode-cn.com/problems/minimum-size-subarray-sum/\" target=\"_blank\">题目来源</a></p>\n<h2 id=\"题目\">题目<a title=\"#题目\" href=\"#题目\"></a></h2>\n<p>给定一个含有 n 个正整数的数组和一个正整数 s ，找出该数组中满足其和 ≥ s 的长度最小的 连续 子数组，并返回其长度。如果不存在符合条件的子数组，返回 0。</p>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：s &#x3D; 7, nums &#x3D; [2,3,1,2,4,3]</span><br><span class=\"line\">输出：2</span><br><span class=\"line\">解释：子数组 [4,3] 是该条件下的长度最小的子数组。</span><br></pre></td></tr></table></figure>\n<h2 id=\"解题思路\">解题思路<a title=\"#解题思路\" href=\"#解题思路\"></a></h2>\n<p>对于连续子数组问题，我们可以利用滑动窗口的思路来思考。由于这道题是要求长度最小的子数组，那么滑动的窗口就要越小越好。</p>\n<ol>\n<li>设置 <code>prev</code> 和 <code>curr</code> 指针，共同指向 <code>nums</code> 的第一个值。</li>\n<li>找到区间 $[prev, curr]$ 的和大于等于 <code>s</code>，将长度存下来</li>\n<li>重复以上步骤，直到 $curr &gt;= nums.length$</li>\n</ol>\n<h2 id=\"代码\">代码<a title=\"#代码\" href=\"#代码\"></a></h2>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number&#125;</span> <span class=\"variable\">s</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;number[]&#125;</span> <span class=\"variable\">nums</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;number&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> minSubArrayLen = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">s, nums</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> prev = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> curr = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = nums[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"keyword\">let</span> res = <span class=\"literal\">Infinity</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (curr &lt; nums.length) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (curr &lt; nums.length &amp;&amp; sum &lt; s) &#123;</span><br><span class=\"line\">            sum += nums[++curr]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sum &gt;= s) &#123;</span><br><span class=\"line\">            res = <span class=\"built_in\">Math</span>.min(res, curr - prev + <span class=\"number\">1</span>)</span><br><span class=\"line\">            sum -= nums[prev]</span><br><span class=\"line\">            prev++</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res === <span class=\"literal\">Infinity</span> ? <span class=\"number\">0</span> : res</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","prev":{"title":"1219. 黄金矿工","link":"2020/07/14/1219.黄金矿工"},"next":{"title":"93. 复原 IP 地址","link":"2020/07/11/93.复原IP地址"},"plink":"https://pigpigever.github.io/2020/07/14/209.长度最小的子数组/","toc":[{"id":"题目","title":"题目","index":"1"},{"id":"解题思路","title":"解题思路","index":"2"},{"id":"代码","title":"代码","index":"3"}],"copyright":{"author":"Tonychen","link":"<a href=\"https://pigpigever.github.io/2020/07/14/209.长度最小的子数组/\" title=\"209. 长度最小的子数组\">https://pigpigever.github.io/2020/07/14/209.长度最小的子数组/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}