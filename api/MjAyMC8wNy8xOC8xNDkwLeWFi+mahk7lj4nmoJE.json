{"title":"1490.克隆N叉树","date":"2020-07-18T14:04:14.000Z","date_formatted":{"ll":"Jul 18, 2020","L":"07/18/2020","MM-DD":"07-18"},"link":"2020/07/18/1490-克隆N叉树","tags":["LeetCode","数据结构","树","深度优先搜索","算法"],"updated":"2020-07-30T14:06:30.401Z","content":"<h2 id=\"题目\">题目<a title=\"#题目\" href=\"#题目\"></a></h2>\n<p>给定一棵 N 叉树的根节点 <code>root</code>，返回该树的深拷贝（克隆）。</p>\n<p>N 叉树的每个节点都包含一个值（ <code>int</code> ）和子节点的列表（ <code>List[Node]</code> ）。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class Node &#123;</span><br><span class=\"line\">    public int val;</span><br><span class=\"line\">    public List&lt;Node&gt; children;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"解题思路\">解题思路<a title=\"#解题思路\" href=\"#解题思路\"></a></h3>\n<p>利用深度优先搜索来做就行了，代码不多～</p>\n<h3 id=\"代码\">代码<a title=\"#代码\" href=\"#代码\"></a></h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * // Definition for a Node.</span></span><br><span class=\"line\"><span class=\"comment\"> * function Node(val, children) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> *    this.val = val === undefined ? 0 : val;</span></span><br><span class=\"line\"><span class=\"comment\"> *    this.children = children === undefined ? [] : children;</span></span><br><span class=\"line\"><span class=\"comment\"> * &#125;;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Node&#125;</span> <span class=\"variable\">node</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;Node&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> cloneTree = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">root</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!root) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; val, children &#125; = root</span><br><span class=\"line\">    <span class=\"keyword\">const</span> clone = <span class=\"keyword\">new</span> Node(val, [])</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; children.length; i++) &#123;</span><br><span class=\"line\">        clone.children[i] = cloneTree(children[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> clone</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","prev":{"title":"数据结构与算法之Trie树","link":"2020/07/24/数据结构与算法之Trie树"},"next":{"title":"679. 24 点游戏","link":"2020/07/16/679.24点游戏"},"plink":"https://pigpigever.github.io/2020/07/18/1490-克隆N叉树/","toc":[{"id":"题目","title":"题目","index":"1","children":[{"id":"解题思路","title":"解题思路","index":"1.1"},{"id":"代码","title":"代码","index":"1.2"}]}]}