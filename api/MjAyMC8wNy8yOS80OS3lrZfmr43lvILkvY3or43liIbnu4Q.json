{"title":"49.字母异位词分组","date":"2020-07-29T06:58:27.000Z","date_formatted":{"ll":"Jul 29, 2020","L":"07/29/2020","MM-DD":"07-29"},"thumbnail":"/images/thumbnail/7.jpg","link":"2020/07/29/49-字母异位词分组","comments":true,"tags":["LeetCode","哈希表","算法"],"updated":"2020-08-10T15:18:09.618Z","content":"<h2 id=\"题目\">题目<a title=\"#题目\" href=\"#题目\"></a></h2>\n<p>给定一个字符串数组，将字母异位词组合在一起。字母异位词指字母相同，但排列不同的字符串。</p>\n<p>示例:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: [&quot;eat&quot;, &quot;tea&quot;, &quot;tan&quot;, &quot;ate&quot;, &quot;nat&quot;, &quot;bat&quot;]</span><br><span class=\"line\">输出:</span><br><span class=\"line\">[</span><br><span class=\"line\">  [&quot;ate&quot;,&quot;eat&quot;,&quot;tea&quot;],</span><br><span class=\"line\">  [&quot;nat&quot;,&quot;tan&quot;],</span><br><span class=\"line\">  [&quot;bat&quot;]</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>说明：</p>\n<ul>\n<li>所有输入均为小写字母。</li>\n<li>不考虑答案输出的顺序。</li>\n</ul>\n<h2 id=\"解题思路\">解题思路<a title=\"#解题思路\" href=\"#解题思路\"></a></h2>\n<p>对于字母异位词来说，他们包含的字符数和对应的字母是相同的，只是排列不同。利用这个我们可以对所有的字符串进行排序，然后用哈希表存起来，最后将结果输出即可。</p>\n<h2 id=\"代码\">代码<a title=\"#代码\" href=\"#代码\"></a></h2>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;string[]&#125;</span> <span class=\"variable\">strs</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return <span class=\"type\">&#123;string[][]&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> groupAnagrams = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">strs</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = []</span><br><span class=\"line\">    <span class=\"keyword\">const</span> map = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> str <span class=\"keyword\">of</span> strs) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> key = str.split(<span class=\"string\">''</span>).sort(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a.charCodeAt(<span class=\"string\">'a'</span>) - b.charCodeAt(<span class=\"string\">'b'</span>)).join(<span class=\"string\">''</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (map.has(key)) &#123;</span><br><span class=\"line\">            map.set(key, [...map.get(key), str])</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            map.set(key, [str])</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> [key, val] <span class=\"keyword\">of</span> map) &#123;</span><br><span class=\"line\">        res.push(val)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","prev":{"title":"盘点常见的JSON用法","link":"2020/07/29/盘点常见的JSON用法"},"next":{"title":"剑指Offer06.从尾到头打印链表","link":"2020/07/28/剑指Offer06-从尾到头打印链表"},"plink":"https://pigpigever.github.io/2020/07/29/49-字母异位词分组/","toc":[{"id":"题目","title":"题目","index":"1"},{"id":"解题思路","title":"解题思路","index":"2"},{"id":"代码","title":"代码","index":"3"}],"copyright":{"author":"Tonychen","link":"<a href=\"https://pigpigever.github.io/2020/07/29/49-字母异位词分组/\" title=\"49.字母异位词分组\">https://pigpigever.github.io/2020/07/29/49-字母异位词分组/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}