{"per_page":10,"total":2,"current":1,"data":[{"title":"深入理解 axios","date":"2020-08-04T09:02:16.000Z","date_formatted":{"ll":"Aug 4, 2020","L":"08/04/2020","MM-DD":"08-04"},"thumbnail":"/images/thumbnail/5.jpg","excerpt":"axios 是基于 Promise 并用于浏览器和 node.js 的 HTTP 请求库。","link":"2020/08/04/axios源码分析","tags":["源码","阅读"]},{"title":"121.买卖股票的最佳时机","date":"2020-08-03T13:21:57.000Z","date_formatted":{"ll":"Aug 3, 2020","L":"08/03/2020","MM-DD":"08-03"},"thumbnail":"/images/thumbnail/7.jpg","excerpt":"给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。 如果你最多只允许完成一笔交易（即买入和卖出一支股票一次），设计一个算法来计算你所能获取的最大利润。 注意：你不能在买入股票前卖出股票。","link":"2020/08/03/121-买卖股票的最佳时机","tags":["LeetCode","动态规划","算法","递归"]},{"title":"1528.重新排列字符串","date":"2020-07-30T13:55:37.000Z","date_formatted":{"ll":"Jul 30, 2020","L":"07/30/2020","MM-DD":"07-30"},"thumbnail":"/images/thumbnail/7.jpg","excerpt":"给你一个字符串 s 和一个 长度相同 的整数数组 indices 。 请你重新排列字符串 s ，其中第 i 个字符需要移动到 indices[i] 指示的位置。 返回重新排列后的字符串。","link":"2020/07/30/1528-重新排列字符串","tags":["LeetCode","字符串","数组","算法"]},{"title":"1502.判断能否形成等差数列","date":"2020-07-30T13:11:35.000Z","date_formatted":{"ll":"Jul 30, 2020","L":"07/30/2020","MM-DD":"07-30"},"thumbnail":"/images/thumbnail/7.jpg","excerpt":"给你一个数字数组 arr 。如果一个数列中，任意相邻两项的差总等于同一个常数，那么这个数列就称为 等差数列 。如果可以重新排列数组形成等差数列，请返回 true ；否则，返回 false 。","link":"2020/07/30/1502-判断能否形成等差数列","tags":["LeetCode","排序","算法"]},{"title":"盘点常见的JSON用法","date":"2020-07-29T12:59:25.000Z","date_formatted":{"ll":"Jul 29, 2020","L":"07/29/2020","MM-DD":"07-29"},"thumbnail":"/images/thumbnail/4.jpg","excerpt":"JSON 是一种语法，可以用来序列化对象、数组或者数字等数据类型。","link":"2020/07/29/盘点常见的JSON用法","tags":["JSON","JavaScript","前端"]},{"title":"49.字母异位词分组","date":"2020-07-29T06:58:27.000Z","date_formatted":{"ll":"Jul 29, 2020","L":"07/29/2020","MM-DD":"07-29"},"thumbnail":"/images/thumbnail/7.jpg","excerpt":"给定一个字符串数组，将字母异位词组合在一起。字母异位词指字母相同，但排列不同的字符串。","link":"2020/07/29/49-字母异位词分组","tags":["LeetCode","哈希表","算法"]},{"title":"剑指Offer06.从尾到头打印链表","date":"2020-07-28T14:24:42.000Z","date_formatted":{"ll":"Jul 28, 2020","L":"07/28/2020","MM-DD":"07-28"},"thumbnail":"/images/thumbnail/8.jpg","excerpt":"输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。","link":"2020/07/28/剑指Offer06-从尾到头打印链表","tags":["LeetCode","剑指offer","算法"]},{"title":"剑指Offer03.数组中重复的数字","date":"2020-07-28T13:40:08.000Z","date_formatted":{"ll":"Jul 28, 2020","L":"07/28/2020","MM-DD":"07-28"},"thumbnail":"/images/thumbnail/8.jpg","excerpt":"找出数组中重复的数字。","link":"2020/07/28/剑指Offer03-数组中重复的数字","tags":["LeetCode","剑指offer","哈希表","算法"]},{"title":"剑指Offer31.栈的压入、弹出序列","date":"2020-07-28T11:18:37.000Z","date_formatted":{"ll":"Jul 28, 2020","L":"07/28/2020","MM-DD":"07-28"},"thumbnail":"/images/thumbnail/8.jpg","excerpt":"输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否为该栈的弹出顺序。假设压入栈的所有数字均不相等。例如，序列 {1,2,3,4,5} 是某栈的压栈序列，序列 {4,5,3,2,1} 是该压栈序列对应的一个弹出序列，但 {4,3,5,1,2} 就不可能是该压栈序列的弹出序列。","link":"2020/07/28/剑指Offer31-栈的压入、弹出序列","tags":["LeetCode","剑指offer","数据结构","栈","算法"]},{"title":"数据结构与算法之Trie树","date":"2020-07-24T15:13:27.000Z","date_formatted":{"ll":"Jul 24, 2020","L":"07/24/2020","MM-DD":"07-24"},"thumbnail":"/images/thumbnail/3.jpg","excerpt":"Trie 树又称为「字典树」，为了与 Tree 区分开来，通常将 Trie 树读作 Try 树，《算法4》上又将这种数据结构称作「单词查找树」。 简单来说，Trie 树适用于字符串的前缀匹配，其前缀匹配的时间复杂度为 $O(m)$，``m`` 为键长。所以特别是当数据量特别大的时候，Trie 树的优势就比较明显。","link":"2020/07/24/数据结构与算法之Trie树","tags":["数据结构","算法"],"categories":["数据结构"]}]}